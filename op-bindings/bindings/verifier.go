// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/zircuit-labs/l2-geth-public"
	"github.com/zircuit-labs/l2-geth-public/accounts/abi"
	"github.com/zircuit-labs/l2-geth-public/accounts/abi/bind"
	"github.com/zircuit-labs/l2-geth-public/common"
	"github.com/zircuit-labs/l2-geth-public/core/types"
	"github.com/zircuit-labs/l2-geth-public/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// VerifierMetaData contains all meta data concerning the Verifier contract.
var VerifierMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"fallback\",\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"version\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"string\",\"internalType\":\"string\"}],\"stateMutability\":\"view\"}]",
	Bin: "0x608060405234801561001057600080fd5b506146e6806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806354fd4d501461458e575b6000366060600282148015610074575061004582846145c8565b6001600160f01b03191661dead60f01b1480610074575061006682846145c8565b6001600160f01b0319908116145b1561008e5750604080516020810190915260008152614583565b6040516080811461009e57600080fd5b60016000805160206146728339815191526000805160206146ba833981519152610123565b60008051602061467283398151915280831081831016908380096000805160206146728339815191528384096000805160206146728339815191528482096000805160206146728339815191526003820890921492909216949350505050565b8060003506602052806020350660405280604035066060528060603506608052806080350660a0528060a0350660c0528060c0350660e0528060e0350661010052806101003506610120528061012035066101405280610140350661016052806101603506610180527f27b90a512ed9a69e5faa898b4f3c2f70f0578420c2ebaf5d2dd7d2324dbbed5060005261018035806101a0526101a035806101c052846101cd82846100c3565b16945050506101c035806101e0526101e0358061020052846101ef82846100c3565b16945050506102003580610220526102203580610240528461021182846100c3565b16945050506102403580610260526102603580610280528461023382846100c3565b169450505061028035806102a0526102a035806102c0528461025582846100c3565b16945050506102e06000206102e0526102e051818106610300528061032052506102c03580610340526102e03580610360528461029282846100c3565b169450505061030035806103805261032035806103a052846102b482846100c3565b169450505060a0610320206103c0526103c0518181066103e05280610400525060016104205360216104002061042052610420518181066104405280610460525061034035806104805261036035806104a0528461031282846100c3565b169450505061038035806104c0526103a035806104e0528461033482846100c3565b16945050506103c03580610500526103e03580610520528461035682846100c3565b16945050506104003580610540526104203580610560528461037882846100c3565b169450505061044035806105805261046035806105a0528461039a82846100c3565b169450505061048035806105c0526104a035806105e052846103bc82846100c3565b16945050506101a0610460206106005261060051818106610620528061064052506104c03580610660526104e0358061068052846103fa82846100c3565b169450505061050035806106a05261052035806106c0528461041c82846100c3565b169450505061054035806106e0526105603580610700528461043e82846100c3565b169450505060e06106402061072052610720518181066107405280610760525080610580350661078052806105a035066107a052806105c035066107c052806105e035066107e0528061060035066108005280610620350661082052806106403506610840528061066035066108605280610680350661088052806106a035066108a052806106c035066108c052806106e035066108e0528061070035066109005280610720350661092052806107403506610940528061076035066109605280610780350661098052806107a035066109a052806107c035066109c052806107e035066109e052806108003506610a0052806108203506610a2052806108403506610a4052806108603506610a6052806108803506610a8052806108a03506610aa052806108c03506610ac052806108e03506610ae052806109003506610b0052806109203506610b2052806109403506610b4052806109603506610b6052806109803506610b8052806109a03506610ba052806109c03506610bc052806109e03506610be05280610a003506610c005280610a203506610c205280610a403506610c405280610a603506610c605280610a803506610c805280610aa03506610ca05280610ac03506610cc05280610ae03506610ce05280610b003506610d005280610b203506610d205280610b403506610d405261060061076020610d6052610d6051818106610d805280610da052506001610dc0536021610da020610dc052610dc051818106610de05280610e005250610b603580610e2052610b803580610e40528461068e82846100c3565b16945050506060610e0020610e6052610e6051818106610e805280610ea05250610ba03580610ec052610bc03580610ee052846106cb82846100c3565b169450505060205160405160581b8101905060605160b01b8101905080610f005260805160a05160581b8101905060c05160b01b8101905080610f20528461071382846100c3565b169450505060e0516101005160581b810190506101205160b01b8101905080610f4052610140516101605160581b810190506101805160b01b8101905080610f60528461076082846100c3565b169450505080610740516107405109610f805280610f8051610f805109610fa05280610fa051610fa05109610fc05280610fc051610fc05109610fe05280610fe051610fe05109611000528061100051611000510961102052806110205161102051096110405280611040516110405109611060528061106051611060510961108052806110805161108051096110a052806110a0516110a051096110c052806110c0516110c051096110e052806110e0516110e05109611100528061110051611100510961112052806111205161112051096111405280611140516111405109611160528061116051611160510961118052806111805161118051096111a052806111a0516111a051096111c052806111c0516111c051096111e052806111e0516111e0510961120052806112005161120051096112205280611220516112205109611240528061124051611240510961126052807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000000611260510861128052807f30644e427ce32d4886b01bfe313ba1dba6db8b2045d128178a7164500e0a6c1161128051096112a052807f1c95a1061a42011f8f413d12ae0ccc948afa22e16f3eec65d3ffbe867a6437af6112a051096112c052807f13cead6cc6ef9f0a290f08a3d3748bc89d39c5670a7a842b6fe2370d759bc85261074051086112e052807f20669a4af88d28096b76c1e00c7eb94022b5eeb63400055aa63bd19ae7ede7146112a0510961130052807f0ffdb427e8a478204cd983d675029f1d057df99245b96b369da623f9081218ed610740510861132052807f1b048c831967630725ea9f285d46b2ebebe150d864dbc8741ee203563196aeee6112a0510961134052807f155fc1efc7ca3d229265a68e243aa5713c52977014dda81d24fff23dbe695113610740510861136052807f134f571fe34eb8c7b1685e875b324820e199bd70157493377cd65b204d1a39646112a0510961138052807f1d14f752fde2e76206e7e72f264f103c469a2ad86444dd59c70b9a73a2e5c69d61074051086113a052807f10450706ff540b5847e6f65ed91542ea8f8cd084a5671feef0bfcfc2f6a588af6112a051096113c052807f201f476be1dd94d170694f57a86c157298a717c3d45250a2532225d0f95a775261074051086113e052807f1589862c1cf3f8b59954774980cc9361c568bcabd9cb7d0858de685794d4772b6112a0510961140052807f1adac846c43da7741efbce6d00b4c4fb62cb2b9c9fedf388eb038d3c5b2b88d6610740510861142052807f26501ebfe559ea5826f023d3e76e4b66f170cd940408eb5590a4075c80b498d66112a0510961144052807f0a142fb2fbd7b5d1916021e29a130cf636c31ab475b0853bb33dee376f4b672b6107405108611460528060016112a0510961148052807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000061074051086114a052807f1951441010b2b95a6e47a6075066a50a036f5ba978c050f2821df86636c0facb6112a051096114c052807f17130a62d07ee6cf4a089faf311ab35324c48c9f00f91f9ec1c3fd2db93f053661074051086114e052807f1283ba6f4b7b1a76ba2008fe823128bea4adb9269cbfd7c41c223be65bc608636112a0510961150052807f1de0940395b685b2fe303cb7ff502f9e83862f21dcf998cd27bfb9ad9439f79e610740510861152052807f2f835d9f4207df4efa4ffa0b2bbf9a4f54221c57cc506b7a5f8dae90bd2e3d0a6112a0510961154052807ee0f0d39f29c0dabe004bab55c1be0dd411cbf0ad690516e454470332d1c2f7610740510861156052807f18c95f1ae6514e11a1b30fd7923947c5ffcec5347f16e91b4dd654168326bede6112a0510961158052807f179aef57fae05218169d35deef48109728652313faa28775f60ba17d6cd9412361074051086115a052807f29aa84e8187de51daa6de67f44fe365fbb789d1e5f97bc95844628487ebd3a0d6112a051096115c052807f06b9c98ac8b3bb0c0de25f373c8321fd6cbb4b2a1a21b3fbbf9bcd4b7142c5f461074051086115e052807f07fe49da5568a43070d955e0d212d956e1ff8abd41a763c737e292bee04766996112a0510961160052807f286604988bc8fbf94776efd5af6e7f0646345d8b38120cca0bff62d50fb89968610740510861162052807f2f6d5dbc65d9e42565b5259fa7b05b83e83bd240f447c0c743a36e342cbbd6ed6112a0510961164052807ef6f0b67b57bc04529b2016d9d0fcd93ff816078571afca003e875fc3442914610740510861166052807f032750f8f3c2493d0828c7285d0258e1bdcaa463f4442a52747b5c96639659bb6112a0510961168052807f2d3cfd79ed6f56ecb0277e8e247eff7b6a6943e48575463ecf6698fd8c69a64661074051086116a052807f1ee9b22299f8d2c2a4a89b7bc09e0b44dbb47bdaea5a81b9a6754c34c1431fb06112a051096116c052807f117a9c504738cd6713a7aa3ac0e34d184c7f6c6d8f5eeed79d6ca95f2ebce05161074051086116e052807e7a4dc361069950d7cc013db4be2feeca18869368a658bafd1f9e32682bfa0b6112a0510961170052807f2fea00af802b06d8e0844478ccc3286e5e1b61b5111317d646c2576187d405f6610740510861172052807f151631bec5913741072b5d1b14089006e6a12b626e1a491aa6f2f6833c1c2b526112a0510961174052807f1b4e1cb41ba068e8b124e89b6d78c8564192bce60b9f27769ceeff10b3e3d4af6107405108611760526112e0518181611320510990508061178052818161136051099050806117a05281816113a051099050806117c05281816113e051099050806117e0528181611420510990508061180052818161146051099050806118205281816114a051099050806118405281816114e05109905080611860528181611520510990508061188052818161156051099050806118a05281816115a051099050806118c05281816115e051099050806118e0528181611620510990508061190052818161166051099050806119205281816116a051099050806119405281816116e05109905080611960528181611720510990508061198052818161176051099050806119a052818161128051099050806119c052506020611a00526020611a20526020611a40526119c051611a60527f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593efffffff611a80526000805160206146ba833981519152611aa05282600160206119e060c0611a0060055afa141692506119e051600061128051905082826119a0510961128052828282099150611760519050828261198051096117605282828209915061172051905082826119605109611720528282820991506116e0519050828261194051096116e0528282820991506116a0519050828261192051096116a052828282099150611660519050828261190051096116605282828209915061162051905082826118e05109611620528282820991506115e051905082826118c051096115e0528282820991506115a051905082826118a051096115a052828282099150611560519050828261188051096115605282828209915061152051905082826118605109611520528282820991506114e0519050828261184051096114e0528282820991506114a0519050828261182051096114a052828282099150611460519050828261180051096114605282828209915061142051905082826117e05109611420528282820991506113e051905082826117c051096113e0528282820991506113a051905082826117a051096113a052828282099150611360519050828261178051096113605282828209915061132051905082826112e0510961132052828282099150816112e0525050806112e0516112c05109611ac05280611320516113005109611ae05280611360516113405109611b0052806113a0516113805109611b2052806113e0516113c05109611b405280611420516114005109611b605280611460516114405109611b8052806114a0516114805109611ba052806114e0516114c05109611bc05280611520516115005109611be05280611560516115405109611c0052806115a0516115805109611c2052806115e0516115c05109611c405280611620516116005109611c605280611660516116405109611c8052806116a0516116805109611ca052806116e0516116c05109611cc05280611720516117005109611ce05280611760516117405109611d005280602051611ba05109818183604051611bc05109089050818183606051611be05109089050818183608051611c00510908905081818360a051611c20510908905081818360c051611c40510908905081818360e051611c60510908905081818361010051611c80510908905081818361012051611ca0510908905081818361014051611cc0510908905081818361016051611ce0510908905081818361018051611d00510908611d2052506107a0516107c05182919009611d405280611d40516107805108611d6052806107e0518203611d605108611d8052806109e051611d805109611da05280611da0516106205109611dc05280610820516108405109611de05280611de0516108005108611e005280610860518203611e005108611e205280610a0051611e205109611e405280611e4051611dc05108611e605280611e60516106205109611e8052806108a0516108c05109611ea05280611ea0516108805108611ec052806108e0518203611ec05108611ee05280610a2051611ee05109611f005280611f0051611e805108611f205280611f20516106205109611f405280610920516109405109611f605280611f60516109005108611f805280610960518203611f805108611fa05280610a4051611fa05109611fc05280611fc051611f405108611fe05280611fe05161062051096120005280610b605182036001086120205280611ba0516120205109612040528061204051612000510861206052806120605161062051096120805280610c8051610c8051096120a05280610c805182036120a051086120c05280611ac0516120c051096120e052806120e051612080510861210052806121005161062051096121205280610ba0518203610bc051086121405280611ba0516121405109612160528061216051612120510861218052806121805161062051096121a05280610c00518203610c2051086121c05280611ba0516121c051096121e052806121e0516121a0510861220052806122005161062051096122205280610c60518203610c8051086122405280611ba0516122405109612260528061226051612220510861228052806122805161062051096122a05280611ac05182036001086122c05280611b0051611ae051086122e05280611b20516122e051086123005280611b405161230051086123205280611b605161232051086123405280611b8051612340510861236052806123605182036122c0510861238052806103e051610a8051096123a052806123a0516109a051086123c05280610440516123c051086123e052806103e051610aa051096124005280612400516107805108612420528061044051612420510861244052806123e05161244051096124605280610b8051612460510961248052806103e0516001096124a052806124a05161074051096124c052806124c0516109a051086124e05280610440516124e0510861250052806103e0517f09226b6e22c6f0ca64ec26aad4c86e715b5f898e5e963f25870e56bbe533e9a20961252052806125205161074051096125405280612540516107805108612560528061044051612560510861258052806125005161258051096125a05280610b60516125a051096125c052806125c051820361248051086125e05280612380516125e051096126005280612600516122a05108612620528061262051610620510961264052806103e051610ac05109612660528061266051610800510861268052806104405161268051086126a052806103e051610ae051096126c052806126c05161088051086126e05280610440516126e0510861270052806126a05161270051096127205280610be051612720510961274052806103e0517f13b360d4e82fe915fed16081038f98c211427b87a281bd733c277dbadf10372b09612760528061276051610740510961278052806127805161080051086127a05280610440516127a051086127c052806103e0517f18afdf23e9bd9302673fc1e076a492d4d65bd18ebc4d854ed189139bab313e52096127e052806127e05161074051096128005280612800516108805108612820528061044051612820510861284052806127c05161284051096128605280610bc0516128605109612880528061288051820361274051086128a05280612380516128a051096128c052806128c05161264051086128e052806128e051610620510961290052806103e051610b0051096129205280612920516109005108612940528061044051612940510861296052806103e051610b20510961298052806129805161098051086129a05280610440516129a051086129c05280612960516129c051096129e05280610c40516129e05109612a0052806103e0517ea136ba13afa6c83eb7b82fb370e228e74155e48fb8f1c1cfc33fb0da8afb4209612a205280612a20516107405109612a405280612a40516109005108612a60528061044051612a605108612a8052806103e0517f2eb9750dce545f17d492058dd201a1251ff3d9077864583d44eaf9be9008699d09612aa05280612aa0516107405109612ac05280612ac0516109805108612ae0528061044051612ae05108612b005280612a8051612b005109612b205280610c2051612b205109612b405280612b40518203612a005108612b60528061238051612b605109612b805280612b80516129005108612ba05280612ba0516106205109612bc052806103e051610b405109612be05280612be051611d205108612c00528061044051612c005108612c205280610ca051612c205109612c4052806103e0517f0c700e936f498cfaff7ab722787c51d54dbe76b8dbb8e572533863af6c71421b09612c605280612c60516107405109612c805280612c8051611d205108612ca0528061044051612ca05108612cc05280610c8051612cc05109612ce05280612ce0518203612c405108612d00528061238051612d005109612d205280612d2051612bc05108612d405280612d40516106205109612d605280610cc0518203600108612d805280611ba051612d805109612da05280612da051612d605108612dc05280612dc0516106205109612de05280610cc051610cc05109612e005280610cc0518203612e005108612e205280611ac051612e205109612e405280612e4051612de05108612e605280612e60516106205109612e8052806103e051610d005108612ea05280610ce051612ea05109612ec0528061044051610d405108612ee05280612ec051612ee05109612f0052806103e0516109805108612f205280610cc051612f205109612f405280610440516109c05108612f605280612f4051612f605109612f805280612f80518203612f005108612fa0528061238051612fa05109612fc05280612fc051612e805108612fe05280612fe05161062051096130005280610d40518203610d0051086130205280611ba05161302051096130405280613040516130005108613060528061306051610620510961308052806123805161302051096130a05280610d20518203610d0051086130c052806130a0516130c051096130e052806130e05161308051086131005280611260516112605109613120528061126051613120510961314052806112605160010961316052806131205160010961318052806112805161310051096131a0528061074051610f8051096131c05280600161074051096131e052806131e0518203610e80510861320052807f1283ba6f4b7b1a76ba2008fe823128bea4adb9269cbfd7c41c223be65bc6086361074051096132205280613220518203610e80510861324052807f1951441010b2b95a6e47a6075066a50a036f5ba978c050f2821df86636c0facb61074051096132605280613260518203610e80510861328052807f1c95a1061a42011f8f413d12ae0ccc948afa22e16f3eec65d3ffbe867a6437af61074051096132a052806132a0518203610e8051086132c052807f26501ebfe559ea5826f023d3e76e4b66f170cd940408eb5590a4075c80b498d661074051096132e052806132e0518203610e80510861330052807f2f835d9f4207df4efa4ffa0b2bbf9a4f54221c57cc506b7a5f8dae90bd2e3d0a61074051096133205280613320518203610e80510861334052807f0ea09ba94d38bb2db2dff170328cd706312ac2c587871932fbf9b5538f158f25610e8051098181837f21c3b2c993f8e4fc057054464ef48156f7092582f232575e47e8404060ea70dc6107405109086133605250610e805181907f012c40d95d017e1c567d73fa1d6478776ea4d0097e58e9ccd24f63690163643090098181837f0ee423d49b8e4790eb37a6348543ba4a587bbd70d6e3109c33e4b3413ab3b5946107405109086133805250610e805181907f0ee423d49b8e4790eb37a6348543ba4a587bbd70d6e3109c33e4b3413ab3b59490098181837f2f516d7025f943b583ec1823e7422e2c90d993b79f42a89eecdf85d12be7ff606107405109086133a05250610e805181907f2fa9d843de55996a40ebf0b5e8e49312c50733798de64167a4c744cc65a6aaea90098181837f2fdc44401961fedd454cb4ef2d38e4ada2241ae9baab4567742663f4a3d1bae06107405109086133c052506132005181906001096133e05280613280516133e051096134005280613240516134005109613420528061334051613420510961344052806001610e8051098181837f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000006107405109086134605250610e805181907f1ae403a7aeca0db9263e247c8f8c9ffebc805873c5ba38939400104226c8b49c90098181837f15804acb3267927092122139f1f4b85e6bb38fd4b3ff37fdafe1e551c9374b656107405109086134805250610e805181907f25c5cb8d3daeda5c27f323e054d9ef6631b679f0d8f7de6e0baa25ffa77b5e3490098181837f0e029d7b0b7f164f329431f228bae07841eae7397b049ff4791cb4a4d84093346107405109086134a05250610e805181907f16b01e864c145881be9efe486c5199821e312e31cbecf2a72cb4358ae39a847c90098181837f1f9bfd60a321850dd028b8676bd55eae93aacde2c01b082a1401ce9670250c376107405109086134c052506132c05161340051829190096134e052807f17130a62d07ee6cf4a089faf311ab35324c48c9f00f91f9ec1c3fd2db93f0537610e8051098181837f1951441010b2b95a6e47a6075066a50a036f5ba978c050f2821df86636c0faca6107405109086135005250610e805181907f1951441010b2b95a6e47a6075066a50a036f5ba978c050f2821df86636c0faca90098181837f06cd89a0c5379ee3b4279d08ce357c4b5ec1a282dc00792e65fbbc7fdafaf2686107405109086135205250610e805181907f0a142fb2fbd7b5d1916021e29a130cf636c31ab475b0853bb33dee376f4b672c90098181837f26501ebfe559ea5826f023d3e76e4b66f170cd940408eb5590a4075c80b498d56107405109086135405250610e805181907f26501ebfe559ea5826f023d3e76e4b66f170cd940408eb5590a4075c80b498d590098181837f10c69893c865f1a28d9bac8a66a1b8052c0810e82a3d6e4d37c59f04ebe021ab6107405109086135605250613300516133e051829190096135805261336051818161338051099050806135a05281816133a051099050806135c05281816133c051099050806135e052818161346051099050806136005281816133e0510990508061362052818161348051099050806136405281816134a051099050806136605281816134c051099050806136805281816134e051099050806136a052818161350051099050806136c052818161352051099050806136e05281816134005109905080613700528181613540510990508061372052818161356051099050806137405281816135805109905080613760525060206137a05260206137c05260206137e05261376051613800527f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593efffffff613820526000805160206146ba83398151915261384052826001602061378060c06137a060055afa1416925061378051600061358051905082826137405109613580528282820991506135605190508282613720510961356052828282099150613540519050828261370051096135405282828209915061340051905082826136e051096134005282828209915061352051905082826136c051096135205282828209915061350051905082826136a05109613500528282820991506134e0519050828261368051096134e0528282820991506134c0519050828261366051096134c0528282820991506134a0519050828261364051096134a05282828209915061348051905082826136205109613480528282820991506133e0519050828261360051096133e05282828209915061346051905082826135e05109613460528282820991506133c051905082826135c051096133c0528282820991506133a051905082826135a051096133a0528282820991506133805190508282613360510961338052828282099150816133605250506133605181816133805108905081816133a05108905081816133c0510861386052506133e05161344051829190096138805261346051806138a05250806134e05161344051096138c0526134805181816134a05108905081816134c051086138e0525061340051613440518291900961390052613500518181613520510861392052506135805161344051829190096139405261354051818161356051086139605250613860516138a05182908290099050806139805281816138e051099050806139a052818161392051099050806139c052818161396051099050806139e052506020613a20526020613a40526020613a60526139e051613a80527f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593efffffff613aa0526000805160206146ba833981519152613ac0528260016020613a0060c0613a2060055afa14169250613a0051600061396051905082826139c051096139605282828209915061392051905082826139a05109613920528282820991506138e0519050828261398051096138e0528282820991506138a0519050828261386051096138a052828282096138605250506138a0516138805182919009613ae052806138e0516138c05109613b005280613920516139005109613b205280613960516139405109613b405280610d8051610d805109613b605280610d8051613b605109613b805280610d8051613b805109613ba05280610d8051613ba05109613bc05280610d8051613bc05109613be05280610d8051613be05109613c005280610d8051613c005109613c205280610d8051613c205109613c405280610d8051613c405109613c605280610d8051613c605109613c805280610d8051613c805109613ca05280610d8051613ca05109613cc05280610d8051613cc05109613ce05280610d8051613ce05109613d005280610d8051613d005109613d205280610d8051613d205109613d405280610de051610de05109613d605280610de051613d605109613d805280610de051613d805109613da05280610de051613da05109613dc05280613360516107805109818183613380516107a051090890508181836133a0516107c051090890508181836133c0516107e0510908613de0819052613860518392509009613e0052806001613e0051830309613e2052806133605161080051098181836133805161082051090890508181836133a05161084051090890508181836133c051610860510908613e40819052613860518392509009613e605280610d8051613e6051830309613e805280610d8051600109613ea05280613e8051613e205108613ec05280613360516108805109818183613380516108a051090890508181836133a0516108c051090890508181836133c0516108e0510908613ee0819052613860518392509009613f005280613b6051613f0051830309613f205280613b6051600109613f405280613f2051613ec05108613f6052806133605161090051098181836133805161092051090890508181836133a05161094051090890508181836133c051610960510908613f80819052613860518392509009613fa05280613b8051613fa051830309613fc05280613b8051600109613fe05280613fc051613f60510861400052806001614000510961402052806001613ea0510961404052806001613f40510961406052806001613fe051096140805280613880516001096140a052806134605161098051096140c0819052613ae0518291096140e0528060016140e051830309614100528060016140a05109614120528061346051610d405109614140819052613ae0518291096141605280610d8051614160518303096141805280610d80516140a051096141a052806141805161410051086141c05280613460516109a051096141e0819052613ae0518291096142005280613b6051614200518303096142205280613b60516140a051096142405280614220516141c051086142605280613460516109c05109614280819052613ae0518291096142a05280613b80516142a0518303096142c05280613b80516140a051096142e052806142c05161426051086143005280613460516109e05109614320819052613ae0518291096143405280613ba051614340518303096143605280613ba0516140a0510961438052806143605161430051086143a0528061346051610a0051096143c0819052613ae0518291096143e05280613bc0516143e0518303096144005280613bc0516140a051096144205280614400516143a05108614440528061346051610a205109614460819052613ae0518291096144805280613be051614480518303096144a05280613be0516140a051096144c052806144a05161444051086144e0528061346051610a405109614500819052613ae0518291096145205280613c0051614520518303096145405280613c00516140a051096145605280614540516144e05108614580528061346051610a8051096145a0819052613ae0518291096145c05280613c20516145c0518303096145e05280613c20516140a0510961460052806145e0516145805108614620528061346051610aa05109614640819052613ae0518291096146605280613c4051614660518303096146805280613c40516140a051096146a052806146805161462051086146c0528061346051610ac051096146e0819052613ae0518291096147005280613c6051614700518303096147205280613c60516140a051096147405280614720516146c05108614760528061346051610ae05109614780819052613ae0518291096147a05280613c80516147a0518303096147c05280613c80516140a051096147e052806147c0516147605108614800528061346051610b005109614820819052613ae0518291096148405280613ca051614840518303096148605280613ca0516140a0510961488052806148605161480051086148a0528061346051610b2051096148c0819052613ae0518291096148e05280613cc0516148e0518303096149005280613cc0516140a051096149205280614900516148a05108614940528061346051610b405109614960819052613ae0518291096149805280613ce051614980518303096149a05280613ce0516140a051096149c052806149a05161494051086149e05280613880516131605109614a005280613880516131805109614a205280613460516131a05109614a40819052613ae051829109614a605280613d0051614a6051830309614a805280613d00516140a05109614aa05280613d0051614a005109614ac05280613d0051614a205109614ae05280614a80516149e05108614b00528061346051610a605109614b20819052613ae051829109614b405280613d2051614b4051830309614b605280613d20516140a05109614b805280614b6051614b005108614ba05280610de051614ba05109614bc05280610de0516141205109614be05280610de0516141a05109614c005280610de0516142405109614c205280610de0516142e05109614c405280610de0516143805109614c605280610de0516144205109614c805280610de0516144c05109614ca05280610de0516145605109614cc05280610de0516146005109614ce05280610de0516146a05109614d005280610de0516147405109614d205280610de0516147e05109614d405280610de0516148805109614d605280610de0516149205109614d805280610de0516149c05109614da05280610de051614aa05109614dc05280610de051614ac05109614de05280610de051614ae05109614e005280610de051614b805109614e205280614bc0516140205108614e4052806138c051600109614e60528061348051610b6051098181836134a051610b8051090890508181836134c051610ba0510908614e80819052613b00518392509009614ea052806001614ea051830309614ec052806001614e605109614ee0528061348051610bc051098181836134a051610be051090890508181836134c051610c00510908614f00819052613b00518392509009614f205280610d8051614f2051830309614f405280610d8051614e605109614f605280614f4051614ec05108614f80528061348051610c2051098181836134a051610c4051090890508181836134c051610c60510908614fa0819052613b00518392509009614fc05280613b6051614fc051830309614fe05280613b6051614e6051096150005280614fe051614f8051086150205280613d605161502051096150405280613d6051614ee051096150605280613d6051614f6051096150805280613d605161500051096150a0528061504051614e4051086150c05280613900516001096150e0528061350051610c80510981818361352051610ca0510908615100819052613b205183925090096151205280600161512051830309615140528060016150e05109615160528061350051610cc0510981818361352051610ce0510908615180819052613b205183925090096151a05280610d80516151a0518303096151c05280610d80516150e051096151e052806151c05161514051086152005280613d805161520051096152205280613d805161516051096152405280613d80516151e051096152605280615220516150c051086152805280613940516001096152a0528061354051610d00510981818361356051610d205109086152c0819052613b405183925090096152e0528060016152e051830309615300528060016152a051096153205280613da05161530051096153405280613da051615320510961536052806153405161528051086153805280613440516001096153a05280610e80516001096153c05260016153e052600261540052615380516154205282600160406153e060606153e060075afa141692506153e0516154405261540051615460526101a051615480526101c0516154a0528260016040615440608061544060065afa141692506101e0516154c052610200516154e052614040516155005282600160406154c060606154c060075afa14169250615440516155205261546051615540526154c051615560526154e051615580528260016040615520608061552060065afa14169250610220516155a052610240516155c052614060516155e05282600160406155a060606155a060075afa14169250615520516156005261554051615620526155a051615640526155c051615660528260016040615600608061560060065afa141692506102605161568052610280516156a052614080516156c0528260016040615680606061568060075afa14169250615600516156e052615620516157005261568051615720526156a0516157405282600160406156e060806156e060065afa141692506102a051615760526102c05161578052614be0516157a0528260016040615760606061576060075afa141692506156e0516157c052615700516157e0526157605161580052615780516158205282600160406157c060806157c060065afa1416925061038051615840526103a05161586052614c0051615880528260016040615840606061584060075afa141692506157c0516158a0526157e0516158c052615840516158e052615860516159005282600160406158a060806158a060065afa141692507f0b538e2c514b575365889f911d8cc46feab72fe062b813e6dacfbe6e9b3a6f34615920527f1c40e041b84f6bfbacd64383e6da0c8d322af2e60b2f85ad8b7ca5df833313c161594052614c2051615960528260016040615920606061592060075afa141692506158a051615980526158c0516159a052615920516159c052615940516159e0528260016040615980608061598060065afa141692507f2d679a88a505cb3a8da19e1f0741ff337389bc48a2f3b9936013aa5b4583618d615a00527f13f0a6493c9ad40b2317f180ac3fde88236cdec22ab58184dcb6ab10b494c0ee615a2052614c4051615a40528260016040615a006060615a0060075afa1416925061598051615a60526159a051615a8052615a0051615aa052615a2051615ac0528260016040615a606080615a6060065afa141692507f043deffece6d6f2ee92aed5bdb5530975f7a9ea6f97f7cb157e6c7fdc2502556615ae0527f07b1731fdd40bb1d229cb5453763d78aa40f1e752d1743992db49b58465171a0615b0052614c6051615b20528260016040615ae06060615ae060075afa14169250615a6051615b4052615a8051615b6052615ae051615b8052615b0051615ba0528260016040615b406080615b4060065afa141692507f0f6d9ce476d6c4793a7a136d653714a9c2df6df39179127dd8d47481ed7b1f47615bc0527f2d97d0af29c5b9f847037c8c48bb62239236084282a766b177f0a684f6a0b984615be052614c8051615c00528260016040615bc06060615bc060075afa14169250615b4051615c2052615b6051615c4052615bc051615c6052615be051615c80528260016040615c206080615c2060065afa141692507f0f04544fec477c40774bd19bfed07d9ba6c9d61bc5dcdfa1f59b67d58bd9f1b0615ca0527f26a876afe743228560b488c5b16df48e94cd6a4197ccf8be4f8eb2e11d8acf89615cc052614ca051615ce0528260016040615ca06060615ca060075afa14169250615c2051615d0052615c4051615d2052615ca051615d4052615cc051615d60528260016040615d006080615d0060065afa141692507f1097e5a2292ce2356c97531291d9913df342bb4bf6c758e4468f27b9d8cae850615d80527f0becdd428ab3cec8ffa616b4ab54b646dcccc9a4e3c49474d70d6216dcab5a1d615da052614cc051615dc0528260016040615d806060615d8060075afa14169250615d0051615de052615d2051615e0052615d8051615e2052615da051615e40528260016040615de06080615de060065afa141692507f0e20ebfeda66a8dbd14bfd1837694d9017cb11df583b001f5049b34597083f38615e60527f194f2f540bba8fb5f38dc25cd333e5cf067c6410f3b262d260f269147fcd814a615e8052614ce051615ea0528260016040615e606060615e6060075afa14169250615de051615ec052615e0051615ee052615e6051615f0052615e8051615f20528260016040615ec06080615ec060065afa141692507f1f386945aac45e5cd160f33455b8a26502fd143e0518b62dc0b5036548003105615f40527f20f5951692f0676f283d9bd0c6453380b8bbd5b6855f249c0109d3428d565423615f6052614d0051615f80528260016040615f406060615f4060075afa14169250615ec051615fa052615ee051615fc052615f4051615fe052615f6051616000528260016040615fa06080615fa060065afa141692507f0f68d0495095d32783734b6d74a312ab0aff59c3580d5a20fef704683acc6e05616020527f119185b91fdf7d816d31ef7aed67529fc0706505537d398a73c4e619f9748aa561604052614d2051616060528260016040616020606061602060075afa14169250615fa05161608052615fc0516160a052616020516160c052616040516160e0528260016040616080608061608060065afa141692507f204f2cb3da7030dbd90e7c4e07166ec7816705434ed08235eaeb0e551319ace8616100527f14091e1a2f7fc9985d3f356e9388f1a3224d8f6f7e13e0816ba698b40b0c7c2a61612052614d4051616140528260016040616100606061610060075afa1416925061608051616160526160a05161618052616100516161a052616120516161c0528260016040616160608061616060065afa141692507f2a1fa000d86a74c8c412ef6c2a933a16c3b4ef562fbfa8fabb8ffa8dac6fa2f56161e0527f0565038c8b90fafea01ef1f9a9ce2c22c567aa7dee2430731180ca3809c986bd61620052614d60516162205282600160406161e060606161e060075afa14169250616160516162405261618051616260526161e05161628052616200516162a0528260016040616240608061624060065afa141692507f12e624a2a78a265dbafb1bae1db82f370f6d752a66b3aceac73f31035bf3e0526162c0527f24235d84f005f5ad3768e6322c05e81362b6cfc21e42ba0b8168b701d3feb3ea6162e052614d80516163005282600160406162c060606162c060075afa14169250616240516163205261626051616340526162c051616360526162e051616380528260016040616320608061632060065afa141692507f02720314a9487c28bfd2df0dc3e6ace61a2daf8955827ac9cf47bcb99ad2b8616163a0527f2e4663af3b832747987a73cb92a83fcc2dfda8d402cb0afd1e0e96c05cc3fd6b6163c052614da0516163e05282600160406163a060606163a060075afa14169250616320516164005261634051616420526163a051616440526163c051616460528260016040616400608061640060065afa141692506106605161648052610680516164a052614dc0516164c0528260016040616480606061648060075afa14169250616400516164e052616420516165005261648051616520526164a0516165405282600160406164e060806164e060065afa141692506106a051616560526106c05161658052614de0516165a0528260016040616560606061656060075afa141692506164e0516165c052616500516165e0526165605161660052616580516166205282600160406165c060806165c060065afa141692506106e051616640526107005161666052614e0051616680528260016040616640606061664060075afa141692506165c0516166a0526165e0516166c052616640516166e052616660516167005282600160406166a060806166a060065afa141692506105c051616720526105e05161674052614e2051616760528260016040616720606061672060075afa141692506166a051616780526166c0516167a052616720516167c052616740516167e0528260016040616780608061678060065afa1416925061048051616800526104a0516168205261506051616840528260016040616800606061680060075afa1416925061678051616860526167a05161688052616800516168a052616820516168c0528260016040616860608061686060065afa141692506104c0516168e0526104e05161690052615080516169205282600160406168e060606168e060075afa14169250616860516169405261688051616960526168e05161698052616900516169a0528260016040616940608061694060065afa14169250610500516169c052610520516169e0526150a051616a005282600160406169c060606169c060075afa1416925061694051616a205261696051616a40526169c051616a60526169e051616a80528260016040616a206080616a2060065afa1416925061054051616aa05261056051616ac05261524051616ae0528260016040616aa06060616aa060075afa14169250616a2051616b0052616a4051616b2052616aa051616b4052616ac051616b60528260016040616b006080616b0060065afa1416925061058051616b80526105a051616ba05261526051616bc0528260016040616b806060616b8060075afa14169250616b0051616be052616b2051616c0052616b8051616c2052616ba051616c40528260016040616be06080616be060065afa1416925061034051616c605261036051616c805261536051616ca0528260016040616c606060616c6060075afa14169250616be051616cc052616c0051616ce052616c6051616d0052616c8051616d20528260016040616cc06080616cc060065afa14169250610e2051616d4052610e4051616d60526153a0518103616d80528260016040616d406060616d4060075afa14169250616cc051616da052616ce051616dc052616d4051616de052616d6051616e00528260016040616da06080616da060065afa14169250610ec051616e2052610ee051616e40526153c051616e60528260016040616e206060616e2060075afa14169250616da051616e8052616dc051616ea052616e2051616ec052616e4051616ee0528260016040616e806080616e8060065afa14169250616e8051616f0052616ea051616f2052610ec051616f4052610ee051616f6052610f0051616f8052610f2051616fa052610f4051616fc052610f6051616fe052610100616f002061700052806170005106617020528061702051617020510961704052806170205160010961706052616f805161708052616fa0516170a052617060516170c0528260016040617080606061708060075afa14169250616f00516170e052616f20516171005261708051617120526170a0516171405282600160406170e060806170e060065afa14169250616fc05161716052616fe05161718052617060516171a0528260016040617160606061716060075afa14169250616f40516171c052616f60516171e0526171605161720052617180516172205282600160406171c060806171c060065afa141692506170e0516172405261710051617260527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2617280527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6172a0527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b6172c0527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa6172e0526171c051617300526171e051617320527f29d8d535d03a8dbfe649850c3ad2b89d92f2bd37e5acda4cf388025bdc31fd32617340527f188c95e5e6b71364b1ced1159509e6f642051c787da379b61bde88550a463f7f617360527f09abaad5291d0bf5e9f561fb0faf6bc3151ef65f29df18381cf1af17cbeb8216617380527f1157f8d92f6abc7e531183e84da719d5a47bda7d0c0cffe091101f7ef2a10f4e6173a052826001602061724061018061724060085afa1416925082600161724051141692508261458157600080fd5b005b915050805190602001f35b6145966145ac565b6040516145a39190614659565b60405180910390f35b6040518060600160405280602881526020016146926028913981565b80356001600160f01b031916828260028210156145fb576145f66001600160f01b0319836002036008021b90565b831692505b505092915050565b60005b8381101561461e578181015183820152602001614606565b50506000910152565b6000614631825190565b808452602084019350614648818560208601614603565b601f01601f19169290920192915050565b6020808252810161466a8184614627565b939250505056fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476333313331333739633462663631386632313335633239353437303439623436393233663764636130644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a164736f6c6343000814000a",
}

// VerifierABI is the input ABI used to generate the binding from.
// Deprecated: Use VerifierMetaData.ABI instead.
var VerifierABI = VerifierMetaData.ABI

// VerifierBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use VerifierMetaData.Bin instead.
var VerifierBin = VerifierMetaData.Bin

// DeployVerifier deploys a new Ethereum contract, binding an instance of Verifier to it.
func DeployVerifier(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Verifier, error) {
	parsed, err := VerifierMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(VerifierBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Verifier{VerifierCaller: VerifierCaller{contract: contract}, VerifierTransactor: VerifierTransactor{contract: contract}, VerifierFilterer: VerifierFilterer{contract: contract}}, nil
}

// Verifier is an auto generated Go binding around an Ethereum contract.
type Verifier struct {
	VerifierCaller     // Read-only binding to the contract
	VerifierTransactor // Write-only binding to the contract
	VerifierFilterer   // Log filterer for contract events
}

// VerifierCaller is an auto generated read-only Go binding around an Ethereum contract.
type VerifierCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// VerifierTransactor is an auto generated write-only Go binding around an Ethereum contract.
type VerifierTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// VerifierFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type VerifierFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// VerifierSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type VerifierSession struct {
	Contract     *Verifier         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// VerifierCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type VerifierCallerSession struct {
	Contract *VerifierCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// VerifierTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type VerifierTransactorSession struct {
	Contract     *VerifierTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// VerifierRaw is an auto generated low-level Go binding around an Ethereum contract.
type VerifierRaw struct {
	Contract *Verifier // Generic contract binding to access the raw methods on
}

// VerifierCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type VerifierCallerRaw struct {
	Contract *VerifierCaller // Generic read-only contract binding to access the raw methods on
}

// VerifierTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type VerifierTransactorRaw struct {
	Contract *VerifierTransactor // Generic write-only contract binding to access the raw methods on
}

// NewVerifier creates a new instance of Verifier, bound to a specific deployed contract.
func NewVerifier(address common.Address, backend bind.ContractBackend) (*Verifier, error) {
	contract, err := bindVerifier(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Verifier{VerifierCaller: VerifierCaller{contract: contract}, VerifierTransactor: VerifierTransactor{contract: contract}, VerifierFilterer: VerifierFilterer{contract: contract}}, nil
}

// NewVerifierCaller creates a new read-only instance of Verifier, bound to a specific deployed contract.
func NewVerifierCaller(address common.Address, caller bind.ContractCaller) (*VerifierCaller, error) {
	contract, err := bindVerifier(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &VerifierCaller{contract: contract}, nil
}

// NewVerifierTransactor creates a new write-only instance of Verifier, bound to a specific deployed contract.
func NewVerifierTransactor(address common.Address, transactor bind.ContractTransactor) (*VerifierTransactor, error) {
	contract, err := bindVerifier(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &VerifierTransactor{contract: contract}, nil
}

// NewVerifierFilterer creates a new log filterer instance of Verifier, bound to a specific deployed contract.
func NewVerifierFilterer(address common.Address, filterer bind.ContractFilterer) (*VerifierFilterer, error) {
	contract, err := bindVerifier(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &VerifierFilterer{contract: contract}, nil
}

// bindVerifier binds a generic wrapper to an already deployed contract.
func bindVerifier(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := VerifierMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Verifier *VerifierRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Verifier.Contract.VerifierCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Verifier *VerifierRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Verifier.Contract.VerifierTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Verifier *VerifierRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Verifier.Contract.VerifierTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Verifier *VerifierCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Verifier.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Verifier *VerifierTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Verifier.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Verifier *VerifierTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Verifier.Contract.contract.Transact(opts, method, params...)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() view returns(string)
func (_Verifier *VerifierCaller) Version(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Verifier.contract.Call(opts, &out, "version")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() view returns(string)
func (_Verifier *VerifierSession) Version() (string, error) {
	return _Verifier.Contract.Version(&_Verifier.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() view returns(string)
func (_Verifier *VerifierCallerSession) Version() (string, error) {
	return _Verifier.Contract.Version(&_Verifier.CallOpts)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() returns()
func (_Verifier *VerifierTransactor) Fallback(opts *bind.TransactOpts, calldata []byte) (*types.Transaction, error) {
	return _Verifier.contract.RawTransact(opts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() returns()
func (_Verifier *VerifierSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _Verifier.Contract.Fallback(&_Verifier.TransactOpts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() returns()
func (_Verifier *VerifierTransactorSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _Verifier.Contract.Fallback(&_Verifier.TransactOpts, calldata)
}
