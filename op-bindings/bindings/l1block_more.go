// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"encoding/json"

	"github.com/zircuit-labs/zkr-monorepo-public/op-bindings/solc"
)

const L1BlockStorageLayoutJSON = "{\"storage\":[{\"astId\":1000,\"contract\":\"src/L2/L1Block.sol:L1Block\",\"label\":\"number\",\"offset\":0,\"slot\":\"0\",\"type\":\"t_uint64\"},{\"astId\":1001,\"contract\":\"src/L2/L1Block.sol:L1Block\",\"label\":\"timestamp\",\"offset\":8,\"slot\":\"0\",\"type\":\"t_uint64\"},{\"astId\":1002,\"contract\":\"src/L2/L1Block.sol:L1Block\",\"label\":\"basefee\",\"offset\":0,\"slot\":\"1\",\"type\":\"t_uint256\"},{\"astId\":1003,\"contract\":\"src/L2/L1Block.sol:L1Block\",\"label\":\"hash\",\"offset\":0,\"slot\":\"2\",\"type\":\"t_bytes32\"},{\"astId\":1004,\"contract\":\"src/L2/L1Block.sol:L1Block\",\"label\":\"sequenceNumber\",\"offset\":0,\"slot\":\"3\",\"type\":\"t_uint64\"},{\"astId\":1005,\"contract\":\"src/L2/L1Block.sol:L1Block\",\"label\":\"blobBaseFeeScalar\",\"offset\":8,\"slot\":\"3\",\"type\":\"t_uint32\"},{\"astId\":1006,\"contract\":\"src/L2/L1Block.sol:L1Block\",\"label\":\"baseFeeScalar\",\"offset\":12,\"slot\":\"3\",\"type\":\"t_uint32\"},{\"astId\":1007,\"contract\":\"src/L2/L1Block.sol:L1Block\",\"label\":\"batcherHash\",\"offset\":0,\"slot\":\"4\",\"type\":\"t_bytes32\"},{\"astId\":1008,\"contract\":\"src/L2/L1Block.sol:L1Block\",\"label\":\"l1FeeOverhead\",\"offset\":0,\"slot\":\"5\",\"type\":\"t_uint256\"},{\"astId\":1009,\"contract\":\"src/L2/L1Block.sol:L1Block\",\"label\":\"l1FeeScalar\",\"offset\":0,\"slot\":\"6\",\"type\":\"t_uint256\"},{\"astId\":1010,\"contract\":\"src/L2/L1Block.sol:L1Block\",\"label\":\"blobBaseFee\",\"offset\":0,\"slot\":\"7\",\"type\":\"t_uint256\"},{\"astId\":1011,\"contract\":\"src/L2/L1Block.sol:L1Block\",\"label\":\"__gap\",\"offset\":0,\"slot\":\"8\",\"type\":\"t_array(t_uint256)42_storage\"},{\"astId\":1012,\"contract\":\"src/L2/L1Block.sol:L1Block\",\"label\":\"depositExclusions\",\"offset\":0,\"slot\":\"50\",\"type\":\"t_bytes_storage\"}],\"types\":{\"t_array(t_uint256)42_storage\":{\"encoding\":\"inplace\",\"label\":\"uint256[42]\",\"numberOfBytes\":\"1344\",\"base\":\"t_uint256\"},\"t_bytes32\":{\"encoding\":\"inplace\",\"label\":\"bytes32\",\"numberOfBytes\":\"32\"},\"t_bytes_storage\":{\"encoding\":\"bytes\",\"label\":\"bytes\",\"numberOfBytes\":\"32\"},\"t_uint256\":{\"encoding\":\"inplace\",\"label\":\"uint256\",\"numberOfBytes\":\"32\"},\"t_uint32\":{\"encoding\":\"inplace\",\"label\":\"uint32\",\"numberOfBytes\":\"4\"},\"t_uint64\":{\"encoding\":\"inplace\",\"label\":\"uint64\",\"numberOfBytes\":\"8\"}}}"

var L1BlockStorageLayout = new(solc.StorageLayout)

var L1BlockDeployedBin = "0x608060405234801561001057600080fd5b50600436106101165760003560e01c80638381f58a116100a2578063c598591811610071578063c598591814610232578063cb2d343f14610249578063e591b28214610251578063e81b2c6d14610279578063f82061401461028257600080fd5b80638381f58a146101f15780638b239f73146102055780639e8c49661461020e578063b80777ea1461021757600080fd5b806354fd4d50116100e957806354fd4d501461016c5780635cf249691461019057806364ca23ef1461019957806368d5dca6146101ba5780637f122dcf146101de57600080fd5b8063015d8eb91461011b57806309bd5a6014610130578063440a5e201461014f5780634d08bc8714610157575b600080fd5b61012e6101293660046105d2565b61028b565b005b61013960025481565b604051610146919061068d565b60405180910390f35b61012e61034a565b61015f6103a4565b60405161014691906106f1565b61015f604051806040016040528060058152602001640312e322e360dc1b81525081565b61013960015481565b6003546101ad9067ffffffffffffffff1681565b6040516101469190610719565b6003546101d190600160401b900463ffffffff1681565b6040516101469190610733565b61012e6101ec366004610844565b610432565b6000546101ad9067ffffffffffffffff1681565b61013960055481565b61013960065481565b6000546101ad90600160401b900467ffffffffffffffff1681565b6003546101d190600160601b900463ffffffff1681565b61012e6104db565b61026c73deaddeaddeaddeaddeaddeaddeaddeaddead000181565b6040516101469190610940565b61013960045481565b61013960075481565b3373deaddeaddeaddeaddeaddeaddeaddeaddead0001146102c75760405162461bcd60e51b81526004016102be9061094e565b60405180910390fd5b6000805467ffffffffffffffff8a81166001600160801b031990921691909117600160401b8a831602178255600188905560028790556003805467ffffffffffffffff1916918716919091179055600484905560058390556006829055604080516020810190915290815260329061033f9082610a90565b505050505050505050565b3373deaddeaddeaddeaddeaddeaddeaddeaddead00011461037357633cc50b456000526004601cfd5b60043560801c60035560143560801c6000556024356001556044356007556064356002556084356004556000603255565b603280546103b1906109c5565b80601f01602080910402602001604051908101604052809291908181526020018280546103dd906109c5565b801561042a5780601f106103ff5761010080835404028352916020019161042a565b820191906000526020600020905b81548152906001019060200180831161040d57829003601f168201915b505050505081565b3373deaddeaddeaddeaddeaddeaddeaddeaddead0001146104655760405162461bcd60e51b81526004016102be9061094e565b6000805467ffffffffffffffff8b81166001600160801b031990921691909117600160401b8b83160217909155600188905560028790556003805467ffffffffffffffff191691871691909117905560048490556005839055600682905560326104cf8282610a90565b50505050505050505050565b3373deaddeaddeaddeaddeaddeaddeaddeaddead00011461050457633cc50b456000526004601cfd5b60043560801c60035560143560801c60005560243560015560443560075560643560025560843560045560a43560326000526020600020602082106001811461055257801561056357505050565b600183901b60c43517603255505050565b60018360011b0160325560005b8381101561058f578060c4013560208204840155602081019050610570565b505b505050565b67ffffffffffffffff81165b81146105ad57600080fd5b50565b80356105bb81610596565b92915050565b806105a2565b80356105bb816105c1565b600080600080600080600080610100898b0312156105f2576105f2600080fd5b60006105fe8b8b6105b0565b985050602061060f8b828c016105b0565b97505060406106208b828c016105c7565b96505060606106318b828c016105c7565b95505060806106428b828c016105b0565b94505060a06106538b828c016105c7565b93505060c06106648b828c016105c7565b92505060e06106758b828c016105c7565b9150509295985092959890939650565b805b82525050565b602081016105bb8284610685565b60005b838110156106b657818101518382015260200161069e565b50506000910152565b60006106c9825190565b8084526020840193506106e081856020860161069b565b601f01601f19169290920192915050565b6020808252810161070281846106bf565b9392505050565b67ffffffffffffffff8116610687565b602081016105bb8284610709565b63ffffffff8116610687565b602081016105bb8284610727565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff8211171561077d5761077d610741565b6040525050565b600061078f60405190565b905061079b8282610757565b919050565b600067ffffffffffffffff8211156107ba576107ba610741565b601f19601f83011660200192915050565b82818337506000910152565b60006107ea6107e5846107a0565b610784565b90508281526020810184848401111561080557610805600080fd5b6108108482856107cb565b509392505050565b600082601f83011261082c5761082c600080fd5b813561083c8482602086016107d7565b949350505050565b60008060008060008060008060006101208a8c03121561086657610866600080fd5b60006108728c8c6105b0565b99505060206108838c828d016105b0565b98505060406108948c828d016105c7565b97505060606108a58c828d016105c7565b96505060806108b68c828d016105b0565b95505060a06108c78c828d016105c7565b94505060c06108d88c828d016105c7565b93505060e06108e98c828d016105c7565b9250506101008a013567ffffffffffffffff81111561090a5761090a600080fd5b6109168c828d01610818565b9150509295985092959850929598565b60006001600160a01b0382166105bb565b61068781610926565b602081016105bb8284610937565b602080825281016105bb81603b81527f4c31426c6f636b3a206f6e6c7920746865206465706f7369746f72206163636f60208201527f756e742063616e20736574204c3120626c6f636b2076616c7565730000000000604082015260600190565b634e487b7160e01b600052602260045260246000fd5b6002810460018216806109d957607f821691505b6020821081036109eb576109eb6109af565b50919050565b60006105bb6109fd8381565b90565b610a09836109f1565b815460001960089490940293841b1916921b91909117905550565b6000610591818484610a00565b81811015610a4c57610a44600082610a24565b600101610a31565b5050565b601f821115610591576000818152602090206020601f85010481016020851015610a775750805b610a896020601f860104830182610a31565b5050505050565b815167ffffffffffffffff811115610aaa57610aaa610741565b610ab482546109c5565b610abf828285610a50565b6020601f831160018114610af35760008415610adb5750858201515b600019600886021c1981166002860217865550610b4c565b600085815260208120601f198616915b82811015610b235788850151825560209485019460019092019101610b03565b86831015610b3f5784890151600019601f89166008021c191682555b6001600288020188555050505b50505050505056fea164736f6c6343000814000a"

func init() {
	if err := json.Unmarshal([]byte(L1BlockStorageLayoutJSON), L1BlockStorageLayout); err != nil {
		panic(err)
	}

	layouts["L1Block"] = L1BlockStorageLayout
	deployedBytecodes["L1Block"] = L1BlockDeployedBin
	immutableReferences["L1Block"] = false
}
